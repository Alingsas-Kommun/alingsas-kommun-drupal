<?php

/**
 * Implements hook_element_info().
 */
function term_reference_tree_element_info() {
  $types = array(
      'term_reference_menu' => array(
          '#input' => true,
          '#process' => array('_term_reference_menu_process'),
          '#theme' => array('term_reference_menu'),
          '#pre_render' => array('form_pre_render_conditional_form_element'),
      ),
   );
}

/**
 * Implements hook_theme().
 */
function term_reference_menu_theme() {
  return array(
      'term_reference_menu' => array(
          'render element' => 'element',
      ),
  );
}

function theme_term_reference_menu($variables) {
  $element = $variables['element'];
  $element['#children'] = drupal_render_children($element);

  $attributes = array();
  if (isset($element['#id'])) {
    $attributes['id'] = $element['#id'];
  }
  $attributes['class'][] = 'term-reference-menu';

  if (form_get_error($element)) {
    $attributes['class'][] = 'error';
  }

  if (!empty($element['#required'])) {
    $attributes['class'][] = 'required';
  }

  if (!empty($element['#attributes']['class'])) {
    $attributes['class'] = array_merge($attributes['class'], $element['#attributes']['class']);
  }
  return
  '<div' . drupal_attributes($attributes) . '>'
  . (!empty($element['#children']) ? $element['#children'] : '')
  . '</div>';
}



/**
 * Implements hook_field_widget_info().
 */
function term_reference_menu_field_widget_info() {
  return array(
    'term_reference_menu' => array(
      'label' => t('Term reference menu'),
      'field types' => array('taxonomy_term_reference'),
      'behaviors' => array(
        'multiple values' => FIELD_BEHAVIOR_CUSTOM,
        'default value' => FIELD_BEHAVIOR_DEFAULT,
      ),
    ),
  );
}

/**
 * Implements hook_field_widget_form().
 */
function term_reference_menu_field_widget_form(&$form, &$form_state, $field, $instance, $langcode, $items, $delta, $element) {

  $default_value = array();
  $terms = array(); $result = array();
  if(count($items)){
    foreach($items as $item){
      $default_value[] = $item['tid'];
    }
    $default_value = implode(',', $default_value);
  }

  $path = drupal_get_path('module', 'term_reference_menu');
  $element += array(
    '#type' => 'textfield',
    '#default_value' => $default_value,
    '#element_validate' => array('_term_reference_menu_validate'),
    '#attached' => array(
        'js' => array( $path . '/term_reference_menu.js' ),
        'css' => array( $path . '/term_reference_menu.css' ),
      ),
    );
  _term_reference_add_js($element, $form_state);
  return $element;
}

function _term_reference_add_js($element, $form_state) {
  $settings['maxitems'] = 0;
  $settings['itemsselected'] = array();
  if(isset($form_state['field'][$element['#field_name']]['und']['field']['cardinality']) && $form_state['field'][$element['#field_name']]['und']['field']['cardinality'] >= 1){
    $settings['maxitems'] = $form_state['field'][$element['#field_name']]['und']['field']['cardinality'];
  }

  if(!$form_state['submitted']) {
    if($element['#default_value']) {
      $settings['itemsselected'] = taxonomy_term_load_multiple(explode(',', $element['#default_value']));
    }
  }
  else {
    if($form_state['input'][$element['#field_name']]['und']) {
      $settings['itemsselected'] = taxonomy_term_load_multiple(explode(',', $form_state['input'][$element['#field_name']]['und']));
    }
  }

  if(count($settings['itemsselected'])){
    foreach($settings['itemsselected'] as &$item){
      $item->path = _term_reference_menu_get_path($item->tid);
    }
  }
  $settings['items'] = _term_reference_menu_get_items(0);
  drupal_add_js(array($element['#field_name'] => $settings), 'setting');
}

function _term_reference_menu_validate($element, &$form_state) {
  $items = array();
  $result = array();
  if($element['#value']){
    $items = explode(',',$element['#value']);
  }
  if(count($items)){
    $items = taxonomy_term_load_multiple($items);
    foreach ($items as $item) {
      $item = (array)$item;
      $item['path'] = _term_reference_menu_get_path($item['tid']);
      $result[] = $item;
    }
  }
  form_set_value($element, $result, $form_state);
  _term_reference_add_js($element, $form_state);
}

/**
  * Implements hook_menu().
  */
function term_reference_menu_menu() {
  $items['term-reference-menu/%/get'] = array(
      'page callback' => '_term_reference_menu_ajax_get_items',
      'page arguments' => array(1),
      'access callback' => 'user_access',
      'access arguments' => array('access content'),
      'type' => MENU_CALLBACK,
  );
  return $items;
}

function _term_reference_menu_process($element, $form_state) {
  return $element;
}

function _term_reference_menu_get_path($tid = null, $self = false){
  $path = array();
  if($tid) {
    $parents = taxonomy_get_parents($tid);
    foreach($parents as $parent){
      $path_tmp = array();
      $item = $parent;
      while($item !== false) {
        if(strlen($item->name) > 13){
          $path_tmp[] = substr($item->name,0,10)."...";
        }
        else {
          $path_tmp[] = $item->name;
        }
        $item_tmp = taxonomy_get_parents($item->tid);
        if(count($item_tmp)){
          $item = reset($item_tmp);
        }
        else {
          $item = false;
        }
      }
      $path[] = join(' &gt ', array_reverse($path_tmp));
    }
  }
  return $path;
}

function _term_reference_menu_get_items($tid = 0) {
  if (false && $cache = cache_get('term_reference_menu_items_'.$tid)) {
    $items = $cache->data;
  }
  else {
    $voc = taxonomy_vocabulary_machine_name_load('organizational_structure');
    if($tid == 0){
      $root = @array_values(taxonomy_get_term_by_name('Koncern', 'organizational_structure'));
      $tid = $root[0]->tid;
    }
    $term = taxonomy_term_load($tid);
    $items = taxonomy_get_tree($voc->vid,$tid,1);

    $path = _term_reference_menu_get_path($tid, $term->name);

    foreach($items as &$item){
      $item->has_children = count(taxonomy_get_children($item->tid,$voc->vid)) ? true : false;
      $item->path = _term_reference_menu_get_path($item->tid);
    }
    cache_set('term_reference_menu_items_'.$tid, $items, 'cache', time() + 360);
  }
  return($items);
}

function _term_reference_menu_ajax_get_items($tid = 0) {
  $items = _term_reference_menu_get_items($tid);
  drupal_json_output($items);
}